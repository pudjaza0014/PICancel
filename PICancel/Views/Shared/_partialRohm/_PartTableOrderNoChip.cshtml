<div class="row">
    <div class=" col-lg">
        <div class="table-responsive-lg text-center">
            <table id="tbNoChip" class="table table-bordered table-striped table-sm nowrap w-100  ">
                <thead>
                    <tr>
                        <th>Select box</th>
                        <th>No</th>
                        <th>OrderNo</th>
                        <th>ProductCode</th>
                        <th>TRNo</th>
                        <th>Spec</th>
                        <th>Pack</th>
                        <th>hFERank</th>
                        <th>RohmLine</th>
                        <th>Type</th>
                        <th>InputDate</th>
                        <th>OrderQtyOrg</th>
                        <th>OrderQty</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                    <tr>
                        <th>Select box</th>
                        <th>No</th>
                        <th>OrderNo</th>
                        <th>ProductCode</th>
                        <th>TRNo</th>
                        <th>Spec</th>
                        <th>Pack</th>
                        <th>hFERank</th>
                        <th>RohmLine</th>
                        <th>Type</th>
                        <th>InputDate</th>
                        <th>OrderQtyOrg</th>
                        <th>OrderQty</th>
                        <th>Message</th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <buton class="btn btn-success" id="btnSave" style="min-width:7vw"><i class="fas fa-save"></i> Save</buton>
        <buton class="btn btn-danger" id="btnDel"><i class="fas fa-trash-alt"></i> Delete</buton>
    </div>
</div>

<script>
    var myTables;
    var ItemCode = [];
    var DocNo;
    function GetdataTables() {

        // #region GetDataTable

        myTables = $('#tbNoChip').DataTable({
            scrollY: "200px",
            paging: false,
            processing: true,
            deferRender: true,
            //dom: '<"top"l>rt<"bottom"ip><"clear">', //ไม่มี Buttons บนหัว Table
            //dom: '<"top"lB>rt<"bottom"ip><"clear">',//มี Buttons บนหัว Table
            dom: '<"top"B>rt<"bottom"ip><"clear">',//มี Buttons ,ไม่มีแบ่งpage บนหัว Table
            columns: [
                {
                    targets: 0,

                    data: '',
                    defaultContent: '',
                    orderable: false,
                    className: 'select-checkbox'
                },
                { data: 'No' },
                { data: 'OrderNo' },
                { data: 'ProductCode' },
                { data: 'TRNo' },
                { data: 'Spec' },
                { data: 'Pack' },
                { data: 'hFERank' },
                { data: 'RohmLine' },
                { data: 'Type' },
                { data: 'InputDate' },
                { data: 'OrderQtyOrg' },
                //{ data: 'OrderQty' },

                {
                    data: 'OrderQty',
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        var OrderQty = oData.OrderQty;
                        var OrderNo = oData.OrderNo;
                        $(nTd).html("<input type='text' id='" + OrderNo + "' name='" + OrderNo +"' class='allowNumOnly form-control form-control-sm' value='" + OrderQty+"' />");
                    }
                },
                { data: 'Message' },
            ],
            buttons: [
                {
                    text: 'Select all',
                    className: '  Button btn btn-outline-info btn-sm',
                    action: function () {
                        myTables.rows().select();
                    }
                },

                {
                    text: 'Select none',
                    className: '  Button btn btn-outline-info btn-sm',
                    action: function () {
                        myTables.rows().deselect();
                    }
                }
            ],
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 0
            }],
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },

            order: [1, "asc"],
            fnInitComplete: function (oSettings, json, sData) {
                $(".se-pre-conF").fadeOut("slow");
                return;
            },
        });


        // #endregion

        //#region btnSave


        $("#btnSave").on("click", function () {

            $(".se-pre-conF").fadeIn("slow");


            DocNo = null;
            var strMsg = "";
            var intChk = 0;
            if ($("#ddlType").val() == "") {
                strMsg = "Please choose Type.";
                intChk++;
            }else
            if (myTables.rows('.selected').data().length == 0) {
                strMsg = "Please choose Data.";
                intChk++;
            } else
            if ($("#txtDocNo2").val() == "") {
                strMsg = "Please Input RunNo.";
                intChk++;
            };

            if (intChk != 0) {
                Swal.fire({
                    icon: 'warning',
                    title: "Warning",
                    text: strMsg,
                    type: 'warning',
                });
                $(".se-pre-conF").fadeOut("slow");
                return false;
            } else {
                DocNo = $("#txtDocNo2").val();
            };

            if (!GetDataSelected()) {
                return false;
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EntryNoChip", "Rohm")',
                data: { dataRohmOrderQty: ItemCode},
                dataType: 'json',
                success: function (Data) {
                    if (Data.strboolbel == true && Data.strResult == "OK") {
                        $(".se-pre-conF").fadeOut("slow");
                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: Data.dataLabel + Data.data,
                            type: 'success',
                            timer: 1500,
                            showConfirmButton: false,
                        })
                            .then(function () {
                                $("#btnClear").click();
                            });
                    }
                    else {
                        $(".se-pre-conF").fadeOut("slow");
                        Swal.fire({
                            icon: 'warning',
                            title: "Warning",
                            text: Data.dataLabel,
                            type: 'warning',
                        })
                    };
                },
                error: function (ex) {
                    $(".se-pre-conF").fadeOut("slow");
                    alert('Failed to retrieve states.' + ex);
                },
            });

        });

        //#endregion


        $("#btnDel").on("click", function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then(function (result) {
                if (!result.value) {
                    return false;
                } else {
                    var strMsg = "";
                    var intChk = 0;
                    if ($("#ddlType").val() == "") {
                        strMsg = "Please choose Type.";
                        intChk++;
                    } else
                        if (myTables.rows('.selected').data().length == 0) {
                            strMsg = "Please choose Data.";
                            intChk++;
                        };
                    if (intChk != 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: "Warning",
                            text: strMsg,
                            type: 'warning',
                        });
                        $(".se-pre-conF").fadeOut("slow");
                        return false;
                    };
                    if (!GetDataSelected()) {
                        return false;
                    };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteNoChip", "Rohm")',
                        data: { dataRohmOrderQty: ItemCode },
                        dataType: 'json',
                        success: function (Data) {
                            if (Data.strboolbel == true && Data.strResult == "OK") {
                                $(".se-pre-conF").fadeOut("slow");
                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: Data.dataLabel + Data.data,
                                    type: 'success',
                                    timer: 1500,
                                    showConfirmButton: false,
                                })
                                    .then(function () {
                                        $("#btnClear").click();
                                    });
                            }
                            else {
                                $(".se-pre-conF").fadeOut("slow");
                                Swal.fire({
                                    icon: 'warning',
                                    title: "Warning",
                                    text: Data.dataLabel,
                                    type: 'warning',
                                });
                            };
                        },
                        error: function (ex) {
                            $(".se-pre-conF").fadeOut("slow");
                            alert('Failed to retrieve states.' + ex);
                        },
                    });
                }
            });
        });

    }

    function GetDataSelected() {
        var oData = myTables.rows('.selected').data();
       for (var i = 0; i < oData.length; i++) {
           var vorderqty = $('#' + oData[i]["OrderNo"] + '').val();
           if (parseInt(oData[i]["OrderQtyOrg"]) < parseInt(vorderqty)) {
               Swal.fire({
                   icon: 'error',
                   title: "Warning",
                   html: '<b>"OrderQty Must be less than or equal to OrderQtyOrg."</b> ' +
                       '<p><small class="form-text text-muted" >OrderQty ต้องน้อยกว่า Original OrderQty</small> </p> ' +
                       'OrderNo : ' + oData[i]["OrderNo"] + '  ' +
                       '<br/><span class="text-danger"> Please checking Selected item again. </span>',
                   type: 'warning',
               });
               ItemCode = null;
               $(".se-pre-conF").fadeOut("slow");
               return false;
               break;

           };
           ItemCode.push({
               "OrderNo": oData[i]["OrderNo"],
               "OrderQtyOrg": oData[i]["OrderQtyOrg"],
               "OrderQty": $('#' + oData[i]["OrderNo"] + '').val(),
               "strRunNo1": $("#txtDocNo1").val(),
               "strRunNo2": DocNo,
               "CategType":"@ViewBag.Event",
           });

        };

        return true;
    };  

    function DrawDatatoTable(Data) {
        try {
            myTables.rows.add(Data.data).draw();
            myTables.rows().select();
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: Data.dataLabel,
                type: 'success',
                timer: 1500,
                showConfirmButton: false,
            });
        } catch (e) {
            Swal.fire({
                icon: 'warning',
                title: "warning",
                text: e.Message,
                type: 'warning',
            })
        }
    };

</script>